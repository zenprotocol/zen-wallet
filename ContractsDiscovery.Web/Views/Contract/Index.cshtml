@model ContractsDiscovery.Web.App_Data.ContractData

<ol class="breadcrumb zen-breadcrumbs">
  <li><a href="/">Contract Explorer</a></li>
  <li class="active">@Model.ActiveContract.Description&nbsp;@(string.IsNullOrEmpty(@Model.ActiveContract.Underlying) ? "" : "(" + @Model.ActiveContract.Underlying + ")")</li>
</ol>

@if (!string.IsNullOrEmpty(@Model.ActiveContract.AssetName))
{
<h1>@Model.ActiveContract.AssetName</h1>
}


<div class="row">
  <div class="col-md-8">
    <table class="table zen-table">
        <tbody>
            @if (!string.IsNullOrEmpty(@Model.ActiveContract.Description))
            {
            <tr>
                <td><p class="text-left">Type:</p></td>
                <td><p class="text-left">@Model.ActiveContract.Description</p></td>
            </tr>
            }
            <tr>
                <td><p class="text-left">Address:</p></td>
                <td><p class="text-left">@Model.ActiveContract.Address</p></td>
            </tr>
            <!--tr>
                <td><p class="text-left">Asset metadata version:</p></td>
                <td><p class="text-left">@Model.ActiveContract.AssetMetadataVersion</p></td>
            </tr>
            <tr>
                <td><p class="text-left">Asset image URL:</p></td>
                <td><p class="text-left">@Model.ActiveContract.AssetImageUrl</p></td>
            </tr-->
            <!--tr>
                <td><p class="text-left">Last block:</p></td>
                <td><p class="text-left">@Model.ActiveContract.LastBlock</p></td>
            </tr-->
            @if (@Model.ActiveContract.Type == "call-option")
            {
            <tr>
                <td><p class="text-left">Premium:</p></td>
                <td><p class="text-left">@Model.ActiveContract.Premium</p></td>
            </tr>
            <tr>
                <td><p class="text-left">Strike:</p></td>
                <td><p class="text-left">@Model.ActiveContract.Strike</p></td>
            </tr>
            <tr>
                <td><p class="text-left">Underlying:</p></td>
                <td><p class="text-left">@Model.ActiveContract.Underlying</p></td>
            </tr>
            <tr>
                <td><p class="text-left">Oracle:</p></td>
                <td><p class="text-left"><a href="@Model.ActiveContract.OracleTickerUrl" target="_blank">@Model.ActiveContract.Oracle</a></p></td>
            </tr>
            }
            <tr>
                <td><p class="text-left">UTXOs:</p></td>
                <td><p class="text-left">@Model.ActiveContract.TotalAssets</p></td>
            </tr>
        </tbody>
    </table>
  </div>
  <div class="col-md-4">
    @switch (@Model.ActiveContract.Type)
    {
        case "call-option":
            using (@Html.BeginForm("PrepareAction", "ContractInteraction", FormMethod.Post))
            {
                @Html.HiddenFor(m => m.ActiveContract.Address)
	            if (@Model.ActiveContract.Initialized)
		        {
                <div>
                    <button type="submit" value="Buy" name="action" class="zen-button zen-dark-blue-button">Buy</button>
                    <button type="submit" value="Exercise" name="action" class="zen-button zen-dark-blue-button">Exercise</button>
                    <button type="submit" value="Collateralize" name="action" class="zen-button zen-dark-blue-button">Collateralize</button>
                    <!--button type="submit" value="Close" name="action" class="zen-button zen-grey-button">Close</button-->
                </div>
		        } else {
                <div>
                    <button type="submit" value="Collateralize" name="action" class="zen-button zen-dark-blue-button">Collateralize</button>
                    <!--button type="submit" value="Close" name="action" class="zen-button zen-grey-button">Close</button-->
                </div>
		        }
		    }
            break;
        case "secure-token-generator":
            using (@Html.BeginForm("Action", "ContractInteraction", FormMethod.Post))
            {
                <input id="Action" name="Action" type="hidden" value="GetTokens">
                <input id="Address" name="Address" type="hidden" value="@Model.ActiveContract.Address">

                <div>
                    <button type="submit" class="btn btn-primary" name="doAction">Get Tokens</button>
                </div>
            }
            break;
    }
  </div>
</div>
<h3>Contract code</h3>
<div class="form-group">
    <textarea rows="20" class="form-control" placeholder="Code">@Model.ActiveContract.Code</textarea>
</div>
